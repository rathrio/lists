name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  api-tests:
    name: API Tests
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.changed_files.*.path, 'api/') }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lists_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true # This will cache bundle install
          working-directory: ./api

      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends imagemagick

      - name: Setup database
        working-directory: ./api
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/lists_test
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run tests
        working-directory: ./api
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/lists_test
        run: bundle exec rails test

  ui-tests:
    name: UI Tests
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.changed_files.*.path, 'ui/') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: './ui/package-lock.json'

      - name: Install dependencies
        working-directory: ./ui
        run: npm ci

      - name: Run tests
        working-directory: ./ui
        run: npm test -- --run
